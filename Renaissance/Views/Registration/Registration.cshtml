@model Renaissance.Models.User
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Test Ground</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    @Styles.Render("~/Content/css/master.css")

</head>

<body>

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-5 col-xs-12">
            </div>
            <div class="col-lg-4 col-xs-12">
            </div>
            <div class="col-lg-3 col-xs-12 mt-2">
                <input type="button" class="m-2 btn btn-outline-secondary" value="Back To Home" onclick="location.href='@Url.Action("index","Home")'" />
                <input type="button" class="m-2 btn btn-outline-secondary" value="Sign In" onclick="location.href='@Url.Action("signIn","Home")'" />
            </div>
        </div>
    </div>

    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-lg-4">
                <div class="jumbotron jumbotron-fluid h-100">
                    <div class="container">
                        <h1 class="display-4">Join The Community</h1>
                        <p class="lead">
                            Join the internet's most active community. Share learn and grow ideas. Solve Prolbems , Set problems.
                            Enjoy Problem Solving and learning.
                        </p><br /><br /><br />
                        <p class="lead">
                            <a class="btn btn-secondary btn-lg" href="#" role="button">Learn more</a>
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-xs-12">
                <div class="page-header mt-2">
                    <h1 class="text-secondary text-center">Registration Form</h1>
                </div>

                <div class="container-fluid mt-5 ml-2">

                    @using (Html.BeginForm("Registration", "Registration", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.institute, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.institute, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.institute, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn" />
                            </div>
                        </div>

                        <p class="text-success">@ViewBag.SuccessMessage</p>
                        <p class="text-danger">@ViewBag.DuplicateMessage</p>
                    </div>
                    }

                </div>  
            </div>
        </div>
    </div>
 
</body>

</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

